{"version":3,"sources":["dice/RecordsBet.js","dice/dice.js","App.js","serviceWorker.js","index.js"],"names":["network","blockchain","protocol","host","port","chainId","contract_account","Date","prototype","Format","fmt","o","M+","this","getMonth","d+","getDate","h+","getHours","m+","getMinutes","s+","getSeconds","q+","Math","floor","S","getMilliseconds","k","test","replace","RegExp","$1","getFullYear","substr","length","RecordsBet","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fetchSlotRecord","lower","arguments","undefined","eosjs","getTableRows","json","code","scope","table","limit","lower_bound","then","res","rows","more","setState","history_record_data","_data","state","i","push","key","txtime","time","account","player","quantity","payout","win","data_records","sort","sortRecordData","setTimeout","id","catch","e","console","error","a","b","componentDidMount","Eos","httpEndpoint","concat","bind","assertThisInitialized","react_default","createElement","className","loading","columns","dataIndex","title","align","width","dataSource","pagination","scroll","y","Component","Header","Content","Option","es_select","slot_result","Dice","init","document","addEventListener","scatterExtension","scatter","window","identity","accounts","find","player_account","name","is_login","getPlayerAsset","playerLoginLogout","forgetIdentity","player_asset","eos","tpt","otc","getIdentity","message","info","eosBalance","_player_asset","balance","changeChip","value","chip","bet_asset","fruit_asset","king","seven7","blink_double","watermelon","bell","pumpkin","orange","apple","changeBetAsset","setBetAssetDouble","_asset","setBetAssetHalf","setBetAssetMax","setBetAssetMin","betStart","_quantity","_uid","getUUID","_memo","split","transfer","from","to","Number","toFixed","memo","success","slot_result_index","fetchSlotResult","warning","len","radix","r","chars","uuid","random","join","_rows_length","result","chooseFruitA","log","_bet_asset","_fruit_asset","chooseFruitB","chooseFruitC","chooseFruitD","chooseFruitE","chooseFruitF","chooseFruitG","chooseFruitH","layout","href","onClick","icon","type","defaultValue","onChange","input_number","min","max","precision","step","es_button","size","src_dice_RecordsBet","App","dice_dice","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5f8efa1c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Table } from 'antd';\nimport Eos from 'eosjs';\nimport './RecordsBet.css';\n\nconst network = {\n    blockchain: 'eos',\n    protocol: 'http',\n    host: 'api.kylin.eosbeijing.one',\n    port: 8880,\n    chainId: '5fff1dae8dc8e2fc4d5b23b2c7665c97f9e9d8edf2b6485a86ba311c25639191'  // kylin net\n}\nconst contract_account = 'sihaiyijia11';\n\n// const bet_slot = ['King', 'Seven7', 'Blink', 'Watermelon', 'Bell', 'Pumpkin', 'Orange', 'Apple'];\n\nDate.prototype.Format = function (fmt) { //author: meizz\n    var o = {\n        \"M+\": this.getMonth() + 1, //月份\n        \"d+\": this.getDate(), //日\n        \"h+\": this.getHours(), //小时\n        \"m+\": this.getMinutes(), //分\n        \"s+\": this.getSeconds(), //秒\n        \"q+\": Math.floor((this.getMonth() + 3) / 3), //季度\n        \"S\": this.getMilliseconds() //毫秒\n    };\n    if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    for (var k in o)\n        if (new RegExp(\"(\" + k + \")\").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\n    return fmt;\n}\n\nclass RecordsBet extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data_records: [],\n            history_record_data: [],\n        }\n\n        this.eosjs = null;\n        this.sortRecordData = this.sortRecordData.bind(this);\n        this.fetchSlotRecord = this.fetchSlotRecord.bind(this);\n    }\n\n    fetchSlotRecord = (lower = '') => {\n        this.eosjs.getTableRows({\n            json: true,\n            code: contract_account,\n            scope: contract_account,\n            table: 'record',\n            limit: 20,\n            lower_bound: lower\n        }).then(res => {\n            if ( res.rows.length > 0 ) {\n                if ( res.more ) {\n                    this.setState({ history_record_data: [] });  // clear\n                }\n\n                const _data = this.state.history_record_data;\n                for ( let i = 0; i < res.rows.length; i++ ) {\n                    _data.push({\n                        key: _data.length,\n                        txtime: new Date(res.rows[i].time*1000).Format('MM/dd hh:mm:ss'),\n                        account: res.rows[i].player,\n                        quantity: res.rows[i].quantity,\n                        payout: res.rows[i].win,\n                    });\n                }\n                this.setState({ history_record_data: _data });\n\n                if ( false === res.more ) {\n                    this.setState({ data_records: this.state.history_record_data.sort(this.sortRecordData) });\n                }\n            }\n\n            if ( res.more ) {\n                setTimeout(this.fetchSlotRecord( res.rows[res.rows.length - 1].id + 1 ), 1000);\n            } else {\n                setTimeout(this.fetchSlotRecord, 1000);\n                this.setState({ history_record_data: [] });  // clear\n            }\n        }).catch(e => {\n            console.error(e);\n            setTimeout(this.fetchSlotRecord, 2000);\n            this.setState({ history_record_data: [] });  // clear\n        });\n    }\n\n    sortRecordData = (a, b) => {\n        return b.key - a.key;\n    }\n\n    componentDidMount = () => {\n        this.eosjs = Eos({\n            httpEndpoint: `${network.protocol}://${network.host}:${network.port}`,\n            chainId: network.chainId\n        });\n        this.fetchSlotRecord();\n    }\n\n    render() {\n\n        const columns = [{\n            key: 'txtime',\n            dataIndex: 'txtime',\n            title: 'Time',\n            align: 'center',\n            width: '25%',\n        }, {\n            key: 'account',\n            dataIndex: 'account',\n            title: 'Player',\n            align: 'center',\n            width: '25%',\n        }, {\n            key: 'quantity',\n            dataIndex: 'quantity',\n            title: 'EOS',\n            align: 'center',\n            width: '25%',\n        }, {\n            key: 'payout',\n            dataIndex: 'payout',\n            title: 'Payout',\n            align: 'center',\n            width: '25%',\n        }];\n\n        return (\n            <div className='tb-records-bet'>\n                <Table\n                    loading={this.state.data_records.length <= 0 ? true : false}\n                    columns={columns}\n                    dataSource={this.state.data_records}\n                    pagination={false}\n                    scroll={{ y: 480 }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default RecordsBet;","import React, { Component } from 'react';\nimport Eos from 'eosjs';\nimport { Layout, Select, Icon, Button, InputNumber, Message } from 'antd';\nimport './dice.css';\nimport RecordsBet from './RecordsBet';\n\nconst { Header, Content } = Layout;\nconst Option = Select.Option;\n\nconst network = {\n    blockchain: 'eos',\n    protocol: 'http',\n    host: 'api.kylin.eosbeijing.one',\n    port: 8880,\n    chainId: '5fff1dae8dc8e2fc4d5b23b2c7665c97f9e9d8edf2b6485a86ba311c25639191'  // kylin net\n}\nconst contract_account = 'sihaiyijia11';  // 合约账号\n\n// 开奖结果返回的index对应的种类，比如index为0对应'Tai-King'\nconst slot_result = ['Tai-King', 'Sai-King', 'Tai-Seven7', 'Sai-Seven7', 'Tai-Blink', 'Sai-Blink',\n                     'Tai-Watermelon', 'Sai-Watermelon', 'Tai-Bell', 'Sai-Bell', 'Tai-Pumpkin', 'Sai-Pumpkin',\n                     'Tai-Orange', 'Sai-Orange', 'Tai-Apple', 'Sai-Apple', '...', 'Waiting'];\n\nclass Dice extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fruit_asset: {              // 记录每个种类的下注，初始为0\n                king: 0,\n                seven7: 0,\n                blink_double: 0,\n                watermelon: 0,\n                bell: 0,\n                pumpkin: 0,\n                orange: 0,\n                apple: 0,\n            },\n            player_asset: {             // 记录玩家各个token的资产\n                eos: '0.0000 EOS',\n                tpt: '0.0000 TPT',\n                otc: '0.0000 OTC',\n            },\n            bet_asset: 0.0001,          // 下注金额，默认值/最小值为0.0001\n            chip: 'EOS',                // 使用的token，默认EOS\n            is_login: false,\n            player_account: 'Login',    // 保存玩家账号，未登录时显示'Login'\n            slot_result_index: 16,      // 保存开奖结果返回的index，默认16，对应的是'...'\n        }\n\n        // eosjs和scatter句柄，将在init()中初始化\n        this.eosjs = null;\n        this.scatter = null;\n\n        this.init = this.init.bind(this);\n        this.getPlayerAsset = this.getPlayerAsset.bind(this);\n\n        this.getUUID = this.getUUID.bind(this);\n        this.fetchSlotResult = this.fetchSlotResult.bind(this);\n    }\n\n    init = () => {\n        this.eosjs = Eos({\n            httpEndpoint: `${network.protocol}://${network.host}:${network.port}`,\n            chainId: network.chainId\n        });\n\n        document.addEventListener('scatterLoaded', scatterExtension => {\n            this.scatter = window.scatter;\n            window.scatter = null;\n\n            if (this.scatter && this.scatter.identity) {\n                const account = this.scatter.identity.accounts.find(account => account.blockchain === 'eos');\n                this.setState({ player_account: account.name });\n                this.setState({ is_login: true });\n\n                this.getPlayerAsset();\n            }\n        });\n    }\n\n    playerLoginLogout = () => {\n        if ( null === this.scatter ) {\n            Message.info('Must Install Scatter First');\n            return;\n        }\n\n        if ( this.state.is_login && this.scatter && this.scatter.identity ) {\n            this.scatter.forgetIdentity().then(() => {\n                this.setState({ is_login: false });\n                this.setState({ player_account: 'Login' });\n\n                // clean asset when logout\n                this.setState({\n                    player_asset: {\n                        eos: '0.0000 EOS',\n                        tpt: '0.0000 TPT',\n                        otc: '0.0000 OTC',\n                    }\n                });\n            });\n        } else if ( !this.state.is_login && this.scatter && !this.scatter.identity ) {\n            this.scatter.getIdentity({ accounts: [network] }).then(() => {\n                const account = this.scatter.identity.accounts.find(account => account.blockchain === 'eos');\n                this.setState({ player_account: account.name });\n                this.setState({ is_login: true });\n\n                this.getPlayerAsset();\n            });\n        }\n    }\n\n    // 获取玩家token资产，这里只获取了eos token资产\n    getPlayerAsset = () => {\n        if ( !this.state.is_login || 'Login' === this.state.player_account ) {\n            return;\n        }\n\n        this.eosjs.getTableRows({\n            json: true,\n            code: 'eosio.token',\n            scope: this.state.player_account,\n            table: 'accounts'\n        }).then(eosBalance => {\n            if ( this.state.is_login && eosBalance.rows[0] ) {  // check if is valid now\n                let _player_asset = this.state.player_asset;\n                _player_asset.eos = eosBalance.rows[0].balance;\n                this.setState({ player_asset: _player_asset });\n            }\n        }).catch(e => {\n            console.error(e);\n        })\n    }\n\n    changeChip = (value) => {\n        this.setState({ chip: value });\n\n        // update bet and fruit asset every time the chip change\n        this.setState({ bet_asset: 0.0001 });\n        this.setState({\n            fruit_asset: {\n                king: 0,\n                seven7: 0,\n                blink_double: 0,\n                watermelon: 0,\n                bell: 0,\n                pumpkin: 0,\n                orange: 0,\n                apple: 0,\n            }\n        });\n    }\n\n    changeBetAsset = (value) => {    \n        this.setState({ bet_asset: value });\n    }\n\n    // 2x button\n    setBetAssetDouble = () => {\n        let _asset = this.state.bet_asset;\n        if ( _asset * 2 <= 2000 ) {\n            this.setState({ bet_asset: _asset * 2 });\n        }\n    }\n\n    // 1/2 button\n    setBetAssetHalf = () => {\n        let _asset = this.state.bet_asset;\n        if ( _asset / 2.0 >= 0.0001 ) {\n            this.setState({ bet_asset: _asset / 2.0 });\n        }\n    }\n\n    // Max button\n    setBetAssetMax = () => {\n        this.setState({ bet_asset: 2000 });\n    }\n\n    // Min button\n    setBetAssetMin = () => {\n        this.setState({ bet_asset: 0.0001 });\n    }\n\n    // 'Let's Start' button\n    betStart = () => {\n        if ( !this.state.is_login || 'Login' === this.state.player_account ) {\n            Message.warning('Please Login First');\n            return;\n        }\n\n        let _quantity = 0.0;\n        let _uid = this.getUUID(8, 10);\n        let _memo = 'uid:' + _uid;\n\n        if ( 0 !== this.state.fruit_asset.king ) {\n            _quantity += this.state.fruit_asset.king;\n            _memo = _memo + ';' + '0:' + this.state.fruit_asset.king * 10000;\n        }\n        if ( 0 !== this.state.fruit_asset.seven7 ) {\n            _quantity += this.state.fruit_asset.seven7;\n            _memo = _memo + ';' + '1:' + this.state.fruit_asset.seven7 * 10000;\n        }\n        if ( 0 !== this.state.fruit_asset.blink_double ) {\n            _quantity += this.state.fruit_asset.blink_double;\n            _memo = _memo + ';' + '2:' + this.state.fruit_asset.blink_double * 10000;\n        }\n        if ( 0 !== this.state.fruit_asset.watermelon ) {\n            _quantity += this.state.fruit_asset.watermelon;\n            _memo = _memo + ';' + '3:' + this.state.fruit_asset.watermelon * 10000;\n        }\n        if ( 0 !== this.state.fruit_asset.bell ) {\n            _quantity += this.state.fruit_asset.bell;\n            _memo = _memo + ';' + '4:' + this.state.fruit_asset.bell * 10000;\n        }\n        if ( 0 !== this.state.fruit_asset.pumpkin ) {\n            _quantity += this.state.fruit_asset.pumpkin;\n            _memo = _memo + ';' + '5:' + this.state.fruit_asset.pumpkin * 10000;\n        }\n        if ( 0 !== this.state.fruit_asset.orange ) {\n            _quantity += this.state.fruit_asset.orange;\n            _memo = _memo + ';' + '6:' + this.state.fruit_asset.orange * 10000;\n        }\n        if ( 0 !== this.state.fruit_asset.apple ) {\n            _quantity += this.state.fruit_asset.apple;\n            _memo = _memo + ';' + '7:' + this.state.fruit_asset.apple * 10000;\n        }\n\n        // check select\n        if ( 0 === _quantity ) {\n            Message.warning('Must Select a Slot');\n            return;\n        }\n\n        // check overdrawn balance\n        if ( _quantity > this.state.player_asset.eos.split(' ')[0] * 1.0 ) {\n            Message.info('Overdrawn Balance');\n            return;\n        }\n\n        const eos = this.scatter.eos(network, Eos, {});\n        eos.transfer({\n            from: this.state.player_account,\n            to: contract_account,\n            quantity: Number(_quantity).toFixed(4) + ' EOS',\n            memo: _memo\n        }).then(res => {\n            Message.success('Slot Bet Success');\n            this.setState({ slot_result_index: 17 });   // 17对应'Waiting'\n            this.getPlayerAsset();                      // update asset after bet\n            this.fetchSlotResult(_uid * 1);             // fetch result\n        }).catch(e => {\n            Message.error(e.message);\n        });\n    }\n\n    getUUID = ( len, radix ) => {\n        var chars = '1123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\n        var uuid = [], i;\n        radix = radix || chars.length;\n\n        if (len) {\n            // Compact form\n            for (i = 0; i < len; i++) uuid[i] = chars[0 | Math.random()*radix];\n        } else {\n            // rfc4122, version 4 form\n            var r;\n            // rfc4122 requires these characters\n            uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\n            uuid[14] = '4';\n            // Fill in random data.  At i==19 set the high bits of clock sequence as\n            // per rfc4122, sec. 4.1.5\n            for (i = 0; i < 36; i++) {\n                if (!uuid[i]) {\n                    r = 0 | Math.random()*16;\n                    uuid[i] = chars[(i === 19) ? (r & 0x3) | 0x8 : r];\n                }\n            }\n        }\n        return uuid.join('');\n    }\n\n    fetchSlotResult = (uuid, lower = '') => {\n        this.eosjs.getTableRows({\n            json: true,\n            code: contract_account,\n            scope: contract_account,\n            table: 'record',\n            lower_bound: lower\n        }).then(res => {\n            if ( res.rows[0] ) {\n\n                // find match uuid\n                let _rows_length = res.rows.length;\n                let i = _rows_length - 1;\n                for ( ; i >= 0; i-- ) {\n                    if ( res.rows[i].uuid === uuid ) {\n                        this.setState({ slot_result_index: res.rows[i].result * 1 });\n                        break;\n                    }\n                }\n\n                // not found, again\n                if ( i < 0 ) {\n                    if ( res.more ) {\n                        this.fetchSlotResult(uuid, res.rows[_rows_length - 1].id);\n                    } else {\n                        this.fetchSlotResult(uuid);\n                    }\n                }\n            }\n        }).catch(e => {\n            console.error(e);\n            setTimeout(this.fetchSlotResult(uuid), 1000);  // again 1s later\n        });\n    }\n\n    //**************************************************************************************\n    //***********************  update fruit asset that the fruit player choose *************\n    chooseFruitA = () => {\n        console.log('King');\n        let _bet_asset = this.state.bet_asset;\n        let _fruit_asset = this.state.fruit_asset;\n        if ( _fruit_asset.king ) {\n            _fruit_asset.king *= 2;\n        } else {\n            _fruit_asset.king = _bet_asset;\n        }\n        this.setState({ fruit_asset: _fruit_asset });\n    }\n    chooseFruitB = () => {\n        console.log('Seven7');\n        let _bet_asset = this.state.bet_asset;\n        let _fruit_asset = this.state.fruit_asset;\n        if ( _fruit_asset.seven7 ) {\n            _fruit_asset.seven7 *= 2;\n        } else {\n            _fruit_asset.seven7 = _bet_asset;\n        }\n        this.setState({ fruit_asset: _fruit_asset });\n    }\n    chooseFruitC = () => {\n        console.log('Blink_double');\n        let _bet_asset = this.state.bet_asset;\n        let _fruit_asset = this.state.fruit_asset;\n        if ( _fruit_asset.blink_double ) {\n            _fruit_asset.blink_double *= 2;\n        } else {\n            _fruit_asset.blink_double = _bet_asset;\n        }\n        this.setState({ fruit_asset: _fruit_asset });\n    }\n    chooseFruitD = () => {\n        console.log('Watermelon');\n        let _bet_asset = this.state.bet_asset;\n        let _fruit_asset = this.state.fruit_asset;\n        if ( _fruit_asset.watermelon ) {\n            _fruit_asset.watermelon *= 2;\n        } else {\n            _fruit_asset.watermelon = _bet_asset;\n        }\n        this.setState({ fruit_asset: _fruit_asset });\n    }\n    chooseFruitE = () => {\n        console.log('Bell');\n        let _bet_asset = this.state.bet_asset;\n        let _fruit_asset = this.state.fruit_asset;\n        if ( _fruit_asset.bell ) {\n            _fruit_asset.bell *= 2;\n        } else {\n            _fruit_asset.bell = _bet_asset;\n        }\n        this.setState({ fruit_asset: _fruit_asset });\n    }\n    chooseFruitF = () => {\n        console.log('Pumpkin');\n        let _bet_asset = this.state.bet_asset;\n        let _fruit_asset = this.state.fruit_asset;\n        if ( _fruit_asset.pumpkin ) {\n            _fruit_asset.pumpkin *= 2;\n        } else {\n            _fruit_asset.pumpkin = _bet_asset;\n        }\n        this.setState({ fruit_asset: _fruit_asset });\n    }\n    chooseFruitG = () => {\n        console.log('Orange');\n        let _bet_asset = this.state.bet_asset;\n        let _fruit_asset = this.state.fruit_asset;\n        if ( _fruit_asset.orange ) {\n            _fruit_asset.orange *= 2;\n        } else {\n            _fruit_asset.orange = _bet_asset;\n        }\n        this.setState({ fruit_asset: _fruit_asset });\n    }\n    chooseFruitH = () => {\n        console.log('Apple');\n        let _bet_asset = this.state.bet_asset;\n        let _fruit_asset = this.state.fruit_asset;\n        if ( _fruit_asset.apple ) {\n            _fruit_asset.apple *= 2;\n        } else {\n            _fruit_asset.apple = _bet_asset;\n        }\n        this.setState({ fruit_asset: _fruit_asset });\n    }\n    //**************************************************************************************\n\n    componentDidMount() {\n        this.init();\n    }\n\n    render() {\n\n        return (\n            <div>\n                <Layout className='layout'>\n                    <Header>\n                        <a href='#' onClick={this.playerLoginLogout.bind(this)} className='login-logout'>\n                            {\n                                this.state.is_login === true ?\n                                <span><Icon type='user'/> {this.state.player_account}</span> :\n                                <span><Icon type='login'/> {this.state.player_account}</span>\n                            }\n                        </a>\n                        <span className='player-asset'>Asset: {this.state.player_asset.eos}</span>\n                        <span className='player-asset'>,&nbsp;&nbsp;&nbsp;&nbsp;{this.state.player_asset.tpt}</span>\n                        <span className='player-asset'>,&nbsp;&nbsp;&nbsp;&nbsp;{this.state.player_asset.otc}</span>\n                    </Header>\n                    <Content>\n                        <div className='dice-result'>Slots Result Is \"{slot_result[this.state.slot_result_index]}\"</div>\n                        <div className='dice-input-box'>\n                            <div className='chip'>\n                                <Select\n                                    defaultValue={this.state.chip}\n                                    onChange={this.changeChip.bind(this)}\n                                >\n                                    <Option value=\"EOS\">EOS</Option>\n                                    <Option value=\"TPT\">TPT</Option>\n                                    <Option value=\"OTC\">OTC</Option>\n                                </Select>\n                            </div>\n                            <div className='asset-input-box'>\n                                <InputNumber\n                                    min={0.0001}\n                                    max={2000}\n                                    defaultValue={0.0001}\n                                    precision={4}\n                                    step={0.5}\n                                    onChange={this.changeBetAsset.bind(this)}\n                                    className='asset-input'\n                                    value={this.state.bet_asset}\n                                />\n                                <Button className='asset-multiple' onClick={this.setBetAssetDouble.bind(this)}>2x</Button>\n                                <Button className='asset-multiple' onClick={this.setBetAssetHalf.bind(this)}>1/2</Button>\n                                <Button className='min-max' onClick={this.setBetAssetMax.bind(this)}>Max</Button>\n                                <Button className='min-max' onClick={this.setBetAssetMin.bind(this)}>Min</Button>\n                            </div>\n                        </div>\n                        <div className='fruits-box'>\n                            <span className='fruit-quantity'>{this.state.fruit_asset.king}</span>\n                            <span className='fruit-quantity'>{this.state.fruit_asset.seven7}</span>\n                            <span className='fruit-quantity'>{this.state.fruit_asset.blink_double}</span>\n                            <span className='fruit-quantity'>{this.state.fruit_asset.watermelon}</span>\n                            <span className='fruit-quantity'>{this.state.fruit_asset.bell}</span>\n                            <span className='fruit-quantity'>{this.state.fruit_asset.pumpkin}</span>\n                            <span className='fruit-quantity'>{this.state.fruit_asset.orange}</span>\n                            <span className='fruit-quantity'>{this.state.fruit_asset.apple}</span>\n                            <Button className='fruit-btn' onClick={this.chooseFruitA.bind(this)}>King</Button>\n                            <Button className='fruit-btn' onClick={this.chooseFruitB.bind(this)}>Seven7</Button>\n                            <Button className='fruit-btn' onClick={this.chooseFruitC.bind(this)}>Blink</Button>\n                            <Button className='fruit-btn' onClick={this.chooseFruitD.bind(this)}>Watermelon</Button>\n                            <Button className='fruit-btn' onClick={this.chooseFruitE.bind(this)}>Bell</Button>\n                            <Button className='fruit-btn' onClick={this.chooseFruitF.bind(this)}>Pumpkin</Button>\n                            <Button className='fruit-btn' onClick={this.chooseFruitG.bind(this)}>Orange</Button>\n                            <Button className='fruit-btn' onClick={this.chooseFruitH.bind(this)}>Apple</Button>\n                        </div>\n                        <div className='bet-start'>\n                            <Button\n                                size='large'\n                                type='primary'\n                                onClick={this.betStart.bind(this)}\n                            >\n                                Let's Start\n                            </Button>\n                        </div>\n                        <RecordsBet />\n                    </Content>\n                </Layout>\n            </div>\n        );\n    }\n}\n\nexport default Dice;","import React, { Component } from 'react';\nimport Dice from './dice/dice';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Dice />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}